--------------------------------------------------------------------------------
-- Metadata
--------------------------------------------------------------------------------
Invocation:       /sbin/cg_annotate cachegrind.out.18696 --auto=yes
Command:          ./server
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Threshold:        0.1%
Annotation:       on

--------------------------------------------------------------------------------
-- Summary
--------------------------------------------------------------------------------
Ir_____________________ 

14,617,925,483 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
-- File:function summary
--------------------------------------------------------------------------------
  Ir___________________________  file:function

< 2,693,203,965 (18.4%,  18.4%)  /usr/include/c++/13.2.1/bits/stl_tree.h:
  2,323,967,775 (15.9%)            range[abi:cxx11](Status, int, int)
    352,991,431  (2.4%)            std::_Rb_tree_iterator<std::pair<int const, short> > std::_Rb_tree<int, std::pair<int const, short>, std::_Select1st<std::pair<int const, short> >, std::less<int>, std::allocator<std::pair<int const, short> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, short> >, std::piecewise_construct_t const&, std::tuple<int&&>&&, std::tuple<>&&) [clone .isra.0]
     15,630,629  (0.1%)            mapToString[abi:cxx11](std::map<int, short, std::less<int>, std::allocator<std::pair<int const, short> > > const&)

< 2,600,317,986 (17.8%,  36.2%)  /home/austin/dev/LSM-Tree/src/MurmurHash3.cpp:MurmurHash3_x86_32(void const*, int, unsigned int, void*)

< 1,986,845,226 (13.6%,  49.8%)  ???:
  1,640,406,565 (11.2%)            ???
    346,372,452  (2.4%)            malloc

< 1,832,842,294 (12.5%,  62.3%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/locale_facets.tcc:
    829,334,701  (5.7%)            int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)
    781,563,329  (5.3%)            std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const
    219,207,303  (1.5%)            std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.0]

<   885,738,786  (6.1%,  68.4%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ostream.tcc:
    416,818,360  (2.9%)            std::ostream::sentry::sentry(std::ostream&)
    385,555,963  (2.6%)            std::ostream& std::ostream::_M_insert<long>(long)
     41,681,696  (0.3%)            std::ostream::operator<<(int)
     41,681,672  (0.3%)            std::ostream::operator<<(short)

<   804,860,413  (5.5%,  73.9%)  /home/austin/dev/LSM-Tree/src/bloomfilter.cpp:
    804,860,329  (5.5%)            BloomFilter::add(int)

<   617,996,199  (4.2%,  78.1%)  /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++98/tree.cc:
    491,146,499  (3.4%)            std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
     76,764,502  (0.5%)            std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
     50,085,198  (0.3%)            std::_Rb_tree_decrement(std::_Rb_tree_node_base*)

<   610,278,897  (4.2%,  82.3%)  /usr/include/c++/13.2.1/bits/stl_bvector.h:
    610,278,711  (4.2%)            BloomFilter::add(int)

<   604,385,517  (4.1%,  86.4%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/streambuf.tcc:std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)

<   437,658,816  (3.0%,  89.4%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ostream_insert.h:std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)

<   201,649,028  (1.4%,  90.8%)  /home/austin/dev/LSM-Tree/src/lsm.hpp:
    121,873,287  (0.8%)            range[abi:cxx11](Status, int, int)
     79,775,735  (0.5%)            populateCatalog()

<   167,635,803  (1.1%,  92.0%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/streambuf:
     83,363,439  (0.6%)            std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)
     41,681,792  (0.3%)            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
     41,681,720  (0.3%)            std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const

<   145,946,811  (1.0%,  93.0%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ios_base.h:
     83,363,445  (0.6%)            std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const
     31,261,344  (0.2%)            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
     15,630,636  (0.1%)            std::ostream::operator<<(int)
     15,630,627  (0.1%)            std::ostream::operator<<(short)

<   125,793,889  (0.9%,  93.8%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/locale_facets.h:
     93,783,897  (0.6%)            std::ostream& std::ostream::_M_insert<long>(long)
     31,261,293  (0.2%)            std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const

<   125,207,977  (0.9%,  94.7%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/basic_ios.h:
     62,522,754  (0.4%)            std::ostream::sentry::sentry(std::ostream&)
     52,102,179  (0.4%)            std::ostream& std::ostream::_M_insert<long>(long)

<   125,045,534  (0.9%,  95.5%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/ostream:
     62,522,688  (0.4%)            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
     62,522,580  (0.4%)            std::ostream& std::ostream::_M_insert<long>(long)

<    94,465,056  (0.6%,  96.2%)  /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/new_op.cc:operator new(unsigned long)

<    72,450,560  (0.5%,  96.7%)  /usr/include/c++/13.2.1/bits/stl_map.h:
     72,432,572  (0.5%)            range[abi:cxx11](Status, int, int)

<    64,042,012  (0.4%,  97.1%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/streambuf_iterator.h:
     62,522,580  (0.4%)            std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const

<    62,960,533  (0.4%,  97.5%)  /usr/include/c++/13.2.1/tuple:
     47,213,682  (0.3%)            std::_Rb_tree_iterator<std::pair<int const, short> > std::_Rb_tree<int, std::pair<int const, short>, std::_Select1st<std::pair<int const, short> >, std::less<int>, std::allocator<std::pair<int const, short> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, short> >, std::piecewise_construct_t const&, std::tuple<int&&>&&, std::tuple<>&&) [clone .isra.0]
     15,737,851  (0.1%)            range[abi:cxx11](Status, int, int)

<    62,695,692  (0.4%,  98.0%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/char_traits.h:
     62,522,670  (0.4%)            std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)

<    62,646,484  (0.4%,  98.4%)  /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++98/locale.cc:
     62,632,500  (0.4%)            std::locale::id::_M_id() const

<    61,913,009  (0.4%,  98.8%)  /home/austin/dev/LSM-Tree/src/lsm.cpp:
     61,912,973  (0.4%)            range[abi:cxx11](Status, int, int)

<    57,312,421  (0.4%,  99.2%)  /home/austin/dev/LSM-Tree/src/utils.cpp:
     57,312,319  (0.4%)            mapToString[abi:cxx11](std::map<int, short, std::less<int>, std::allocator<std::pair<int const, short> > > const&)

<    46,892,300  (0.3%,  99.5%)  /usr/include/c++/13.2.1/ostream:
     46,891,894  (0.3%)            mapToString[abi:cxx11](std::map<int, short, std::less<int>, std::allocator<std::pair<int const, short> > > const&)

<    41,681,816  (0.3%,  99.8%)  /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/stl_algobase.h:
     41,681,730  (0.3%)            std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)

<    23,628,726  (0.2%, 100.0%)  /usr/include/c++/13.2.1/bits/new_allocator.h:
     23,606,841  (0.2%)            std::_Rb_tree_iterator<std::pair<int const, short> > std::_Rb_tree<int, std::pair<int const, short>, std::_Select1st<std::pair<int const, short> >, std::less<int>, std::allocator<std::pair<int const, short> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, short> >, std::piecewise_construct_t const&, std::tuple<int&&>&&, std::tuple<>&&) [clone .isra.0]

--------------------------------------------------------------------------------
-- Function:file summary
--------------------------------------------------------------------------------
  Ir__________________________  function:file

> 2,600,317,986 (17.8%, 17.8%)  MurmurHash3_x86_32(void const*, int, unsigned int, void*):/home/austin/dev/LSM-Tree/src/MurmurHash3.cpp

> 2,595,925,170 (17.8%, 35.5%)  range[abi:cxx11](Status, int, int):
  2,323,967,775 (15.9%)           /usr/include/c++/13.2.1/bits/stl_tree.h
    121,873,287  (0.8%)           /home/austin/dev/LSM-Tree/src/lsm.hpp
     72,432,572  (0.5%)           /usr/include/c++/13.2.1/bits/stl_map.h
     61,912,973  (0.4%)           /home/austin/dev/LSM-Tree/src/lsm.cpp
     15,737,851  (0.1%)           /usr/include/c++/13.2.1/tuple

> 1,640,406,565 (11.2%, 46.8%)  ???:???

> 1,415,139,040  (9.7%, 56.4%)  BloomFilter::add(int):
    804,860,329  (5.5%)           /home/austin/dev/LSM-Tree/src/bloomfilter.cpp
    610,278,711  (4.2%)           /usr/include/c++/13.2.1/bits/stl_bvector.h

>   969,131,074  (6.6%, 63.1%)  std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const:
    781,563,329  (5.3%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/locale_facets.tcc
     83,363,445  (0.6%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ios_base.h
     62,522,580  (0.4%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/streambuf_iterator.h
     41,681,720  (0.3%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/streambuf

>   829,334,701  (5.7%, 68.8%)  int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool):/usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/locale_facets.tcc

>   791,953,356  (5.4%, 74.2%)  std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long):
    604,385,517  (4.1%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/streambuf.tcc
     83,363,439  (0.6%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/streambuf
     62,522,670  (0.4%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/char_traits.h
     41,681,730  (0.3%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/stl_algobase.h

>   593,964,619  (4.1%, 78.2%)  std::ostream& std::ostream::_M_insert<long>(long):
    385,555,963  (2.6%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ostream.tcc
     93,783,897  (0.6%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/locale_facets.h
     62,522,580  (0.4%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/ostream
     52,102,179  (0.4%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/basic_ios.h

>   583,545,088  (4.0%, 82.2%)  std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long):
    437,658,816  (3.0%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ostream_insert.h
     62,522,688  (0.4%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/ostream
     41,681,792  (0.3%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/streambuf
     31,261,344  (0.2%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ios_base.h

>   491,146,499  (3.4%, 85.6%)  std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&):/usr/src/debug/gcc/gcc/libstdc++-v3/src/c++98/tree.cc

>   479,341,114  (3.3%, 88.9%)  std::ostream::sentry::sentry(std::ostream&):
    416,818,360  (2.9%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ostream.tcc
     62,522,754  (0.4%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/basic_ios.h

>   423,811,954  (2.9%, 91.8%)  std::_Rb_tree_iterator<std::pair<int const, short> > std::_Rb_tree<int, std::pair<int const, short>, std::_Select1st<std::pair<int const, short> >, std::less<int>, std::allocator<std::pair<int const, short> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, short> >, std::piecewise_construct_t const&, std::tuple<int&&>&&, std::tuple<>&&) [clone .isra.0]:
    352,991,431  (2.4%)           /usr/include/c++/13.2.1/bits/stl_tree.h
     47,213,682  (0.3%)           /usr/include/c++/13.2.1/tuple
     23,606,841  (0.2%)           /usr/include/c++/13.2.1/bits/new_allocator.h

>   346,372,452  (2.4%, 94.1%)  malloc:???

>   219,207,303  (1.5%, 95.6%)  std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.0]:/usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/locale_facets.tcc

>   119,834,899  (0.8%, 96.5%)  mapToString[abi:cxx11](std::map<int, short, std::less<int>, std::allocator<std::pair<int const, short> > > const&):
     57,312,319  (0.4%)           /home/austin/dev/LSM-Tree/src/utils.cpp
     46,891,894  (0.3%)           /usr/include/c++/13.2.1/ostream
     15,630,629  (0.1%)           /usr/include/c++/13.2.1/bits/stl_tree.h

>    94,465,056  (0.6%, 97.1%)  operator new(unsigned long):/usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/new_op.cc

>    80,624,260  (0.6%, 97.7%)  populateCatalog():
     79,775,735  (0.5%)           /home/austin/dev/LSM-Tree/src/lsm.hpp

>    76,764,502  (0.5%, 98.2%)  std::_Rb_tree_increment(std::_Rb_tree_node_base const*):/usr/src/debug/gcc/gcc/libstdc++-v3/src/c++98/tree.cc

>    62,632,548  (0.4%, 98.6%)  std::locale::id::_M_id() const:
     62,632,500  (0.4%)           /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++98/locale.cc

>    57,312,332  (0.4%, 99.0%)  std::ostream::operator<<(int):
     41,681,696  (0.3%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ostream.tcc
     15,630,636  (0.1%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ios_base.h

>    57,312,299  (0.4%, 99.4%)  std::ostream::operator<<(short):
     41,681,672  (0.3%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ostream.tcc
     15,630,627  (0.1%)           /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ios_base.h

>    50,085,198  (0.3%, 99.7%)  std::_Rb_tree_decrement(std::_Rb_tree_node_base*):/usr/src/debug/gcc/gcc/libstdc++-v3/src/c++98/tree.cc

>    31,261,293  (0.2%, 99.9%)  std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const:/usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/locale_facets.h

--------------------------------------------------------------------------------
-- Annotated source file: /home/austin/dev/LSM-Tree/src/MurmurHash3.cpp
--------------------------------------------------------------------------------
Ir________________ 

-- line 28 ----------------------------------------
          .         // Other compilers
          .         
          .         #else	// defined(_MSC_VER)
          .         
          .         #define	FORCE_INLINE inline __attribute__((always_inline))
          .         
          .         inline uint32_t rotl32 ( uint32_t x, int8_t r )
          .         {
106,135,428 (0.7%)    return (x << r) | (x >> (32 - r));
          .         }
          .         
          .         inline uint64_t rotl64 ( uint64_t x, int8_t r )
          .         {
          .           return (x << r) | (x >> (64 - r));
          .         }
          .         
          .         #define	ROTL32(x,y)	rotl32(x,y)
-- line 44 ----------------------------------------
-- line 62 ----------------------------------------
          .           return p[i];
          .         }
          .         
          .         //-----------------------------------------------------------------------------
          .         // Finalization mix - force all bits of a hash block to avalanche
          .         
          .         FORCE_INLINE uint32_t fmix32 ( uint32_t h )
          .         {
159,203,142 (1.1%)    h ^= h >> 16;
 53,067,714 (0.4%)    h *= 0x85ebca6b;
159,203,142 (1.1%)    h ^= h >> 13;
 53,067,714 (0.4%)    h *= 0xc2b2ae35;
212,270,856 (1.5%)    h ^= h >> 16;
          .         
          .           return h;
          .         }
          .         
          .         //----------
          .         
          .         FORCE_INLINE uint64_t fmix64 ( uint64_t k )
          .         {
-- line 82 ----------------------------------------
-- line 88 ----------------------------------------
          .         
          .           return k;
          .         }
          .         
          .         //-----------------------------------------------------------------------------
          .         
          .         void MurmurHash3_x86_32 ( const void * key, int len,
          .                                   uint32_t seed, void * out )
212,270,856 (1.5%)  {
          .           const uint8_t * data = (const uint8_t*)key;
265,338,570 (1.8%)    const int nblocks = len / 4;
          .         
          .           uint32_t h1 = seed;
          .         
          .           const uint32_t c1 = 0xcc9e2d51;
          .           const uint32_t c2 = 0x1b873593;
          .         
          .           //----------
          .           // body
          .         
106,135,428 (0.7%)    const uint32_t * blocks = (const uint32_t *)(data + nblocks*4);
          .         
477,609,426 (3.3%)    for(int i = -nblocks; i; i++)
          .           {
          .             uint32_t k1 = getblock32(blocks,i);
          .         
 53,067,714 (0.4%)      k1 *= c1;
          .             k1 = ROTL32(k1,15);
 53,067,714 (0.4%)      k1 *= c2;
          .             
 53,067,714 (0.4%)      h1 ^= k1;
          .             h1 = ROTL32(h1,13); 
 53,067,714 (0.4%)      h1 = h1*5+0xe6546b64;
          .           }
          .         
          .           //----------
          .           // tail
          .         
          .           const uint8_t * tail = (const uint8_t*)(data + nblocks*4);
          .         
          .           uint32_t k1 = 0;
          .         
424,541,712 (2.9%)    switch(len & 3)
          .           {
          .           case 3: k1 ^= tail[2] << 16;
          .           case 2: k1 ^= tail[1] << 8;
          .           case 1: k1 ^= tail[0];
          .                   k1 *= c1; k1 = ROTL32(k1,15); k1 *= c2; h1 ^= k1;
          .           };
          .         
          .           //----------
          .           // finalization
          .         
106,135,428 (0.7%)    h1 ^= len;
          .         
          .           h1 = fmix32(h1);
          .         
          .           *(uint32_t*)out = h1;
 53,067,714 (0.4%)  } 
          .         
          .         //-----------------------------------------------------------------------------
          .         
          .         void MurmurHash3_x86_128 ( const void * key, const int len,
          .                                    uint32_t seed, void * out )
          .         {
          .           const uint8_t * data = (const uint8_t*)key;
          .           const int nblocks = len / 16;
-- line 154 ----------------------------------------

--------------------------------------------------------------------------------
-- Annotated source file: /home/austin/dev/LSM-Tree/src/bloomfilter.cpp
--------------------------------------------------------------------------------
Ir________________ 

          .         #include <vector>
          .         #include <functional>
          .         
          .         #include "bloomfilter.hpp"
          .         #include "Types.hpp"
          .         
         42 (0.0%)  BloomFilter::BloomFilter(size_t numBits, size_t numHashFunctions)
         42 (0.0%)      : bits(numBits), numHashes(numHashFunctions) {}
          .         
 88,446,190 (0.6%)  void BloomFilter::add(KEY_TYPE key) {
          .             uint32_t hash[1];
203,426,237 (1.4%)      for (size_t i = 0; i < this->numHashes; ++i) {
          .                 // i is used as the seed.
265,338,570 (1.8%)          MurmurHash3_x86_32(&key, sizeof(key), i, hash);
159,203,142 (1.1%)         this->bits[hash[0] % this->bits.size()] = true;
          .             }
 88,446,190 (0.6%)  }
          .         
          .         bool BloomFilter::mayContain(KEY_TYPE key) {
          .             uint32_t hash[1];
          .             for (size_t i = 0; i < this->numHashes; ++i) {
          .                 // i is used as the seed.
          .                 MurmurHash3_x86_32(&key, sizeof(key), i, hash);
          .                 if (!this->bits[hash[0] % this->bits.size()]) {
          .                     return false;
-- line 25 ----------------------------------------

--------------------------------------------------------------------------------
-- Annotated source file: /home/austin/dev/LSM-Tree/src/lsm.cpp
--------------------------------------------------------------------------------
Ir_______________ 

-- line 5 ----------------------------------------
         .         #include <chrono>
         .         
         .         #include "Types.hpp"
         .         #include "lsm.hpp"
         .         #include "Utils.hpp"
         .         #include <fstream>
         .         
         .         // std::map<KEY_TYPE, VAL_TYPE> map;
         4 (0.0%)  LSM<KEY_TYPE, VAL_TYPE> lsm;
         .         Stats stats;
         .         
         .         // Uncomment the functions below and comment out the LSM tree versions
         .         // to see how the system performs when the underlying implementation is a map.
         .         
         .         // `put()`
         .         // This version of put uses a map. Used for debugging and development.
         .         // std::tuple<Status, std::string> put(Status status, int key, int val) {
-- line 21 ----------------------------------------
-- line 83 ----------------------------------------
         .             }
         .         
         .             stats.failedGets++;
         .             return std::make_tuple(status, "");
         .         }
         .         
         .         // `range()`
         .         // Conduct a range query within the LSM tree.
        14 (0.0%)  std::tuple<Status, std::string> range(Status status, KEY_TYPE leftBound, KEY_TYPE rightBound) {
         .         
         1 (0.0%)      stats.ranges++;
         .         
         .             std::map<KEY_TYPE, VAL_TYPE> results;
         .         
         .             // A range query must search through every level of the LSM tree. We iterate in reverse so that
         .             // only the most recent duplicate KV pair is retrieved in the case of duplicate entries.
        19 (0.0%)      for (int l = lsm.getNumLevels() - 1; l >= 0; l--) {
        18 (0.0%)          if (l == 0) {
       387 (0.0%)              for (size_t i = 0; i < lsm.getPairsInLevel(0); i++) {
       512 (0.0%)                  if ((leftBound <= lsm.getKey(l, i)) && (lsm.getKey(l, i) < rightBound)) {
       256 (0.0%)                      results[lsm.getKey(l, i)] = lsm.getVal(l, i);
       256 (0.0%)                      if (lsm.getTomb(l, i)) results.erase(lsm.getKey(l, i));
         .                         }
         .                     }
         .                 } else {
        10 (0.0%)              auto startSearch = std::chrono::high_resolution_clock::now();
         .                     int startIndex = lsm.searchLevel(l, leftBound, true);
         .                     int endIndex = lsm.searchLevel(l, rightBound, true);
         5 (0.0%)              auto endSearch = std::chrono::high_resolution_clock::now();
         .                     auto durationSearch = std::chrono::duration_cast<std::chrono::microseconds>(endSearch - startSearch);
         .         
        10 (0.0%)              auto startRange = std::chrono::high_resolution_clock::now();
26,533,483 (0.2%)              for (int i = startIndex; i < endIndex; i++) {
17,688,982 (0.1%)                  results[lsm.getKey(l, i)] = lsm.getVal(l, i);
17,688,982 (0.1%)                  if (lsm.getTomb(l, i)) results.erase(lsm.getKey(l, i));
         .                     }
        10 (0.0%)              auto endRange = std::chrono::high_resolution_clock::now();
         .                     auto durationRange = std::chrono::duration_cast<std::chrono::microseconds>(endRange - startRange);
         .         
         .                     std::ofstream logfile("logfile.txt", std::ios::app);
        10 (0.0%)              if (logfile.is_open()) {
         .                         logfile << "Search time: " << durationSearch.count() << " microseconds." << std::endl;
         .                         logfile << "Range time: " << durationRange.count() << " microseconds." << std::endl;
         .                         logfile.close();
         .                     } else {
         .                         std::cout << "Failed to open log file." << std::endl;
         .                     }
         .                 }
         .             }
         .         
         8 (0.0%)      std::cout << "Range query bounds: [" << leftBound << ", " << rightBound << "], Range query size: " << results.size() << std::endl;
         7 (0.0%)      stats.rangeLengthSum += results.size();
         3 (0.0%)      return std::make_tuple(status, mapToString(results));
         .         }
         .         
         .         void printLevels(std::string userCommand) {
         .         
         .             std::cout << "\n———————————————————————————————— " << std::endl;
         .             std::cout << "——————— Printing levels. ——————— " << std::endl;
         .             std::cout << "———————————————————————————————— \n" << std::endl;
         .         
-- line 143 ----------------------------------------
-- line 167 ----------------------------------------
         .                     std::cout << lsm.getBloomFilter(l)->getBit(lsm.getBloomFilter(l)->numBits() - 1) << "]" << std::endl;
         .                     for (size_t i = 0; i < lsm.getPairsInLevel(l); i++) {
         .                         std::cout << lsm.getKey(l, i) << " -> " << lsm.getVal(l, i) << "  " << lsm.getTomb(l, i) << std::endl;
         .                     }
         .                 }
         .             }
         .         }
         .         
        11 (0.0%)  std::tuple<Status, std::string> processCommand(std::string userCommand) {
         .         
         .             Status status = SUCCESS;
         .         
         .             if (userCommand == "s" || userCommand == "shutdown" || userCommand == "sw") {
         .                 if (userCommand == "sw") return std::make_tuple(status, "Server processed shutdown command. Wiping all data.");
         .                 return std::make_tuple(status, "Server processed shutdown command. Persisting data.");
         .             }
         .         
         .             if (userCommand == "p" || userCommand == "pv") {
         .                 printLevels(userCommand);
         .                 return std::make_tuple(status, "Printed levels to server.");
         .             }
         .         
         .             // Tokenize the command.
         3 (0.0%)      std::vector<std::string> tokens = parseCommand(userCommand);
         .         
         .             // Check that the input command is valid, and proceed with routing if so.
         .             if (tokens[0] == "p" && tokens.size() == 3 && isNum(tokens[1]) && isNum(tokens[2])) {
         .                 // std::cout << "Received put command.\n" <<  std::endl;
         .                 return put(status, std::stoi(tokens[1]), std::stoi(tokens[2]), false);
         .             } else if (tokens[0] == "g" && tokens.size() == 2 && isNum(tokens[1])) {
         .                 // std::cout << "Received  get command.\n" << std::endl;
         .                 return get(status, std::stoi(tokens[1]));
         9 (0.0%)      } else if (tokens[0] == "r" && tokens.size() == 3 && isNum(tokens[1]) && isNum(tokens[2])) {
         .                 // std::cout << "Received range query command.\n" <<  std::endl;
         .                 // start timing the function
         2 (0.0%)          auto start = std::chrono::high_resolution_clock::now();
         5 (0.0%)          auto res = range(status, std::stoi(tokens[1]), std::stoi(tokens[2]));
         .                 auto end = std::chrono::high_resolution_clock::now();
         .                 auto duration = std::chrono::duration_cast<std::chrono::microseconds>(end - start);
         .                 std::ofstream logfile("logfile.txt", std::ios::app);
         .                 if (logfile.is_open()) {
         .                     logfile << "Range query took " << duration.count() << " microseconds." << std::endl;
         .                     logfile.close();
         .                 } else {
         .                     std::cout << "Failed to open log file." << std::endl;
-- line 211 ----------------------------------------
-- line 221 ----------------------------------------
         .                         g x   — GET\n\
         .                         r x y — RANGE\n\
         .                         p     — Print levels to server.\n\
         .                         pv    — Print levels to server (verbose).\n\
         .                         s     — Shutdown and persist.\n\
         .                         sw    — Shutdown and wipe all data.\n"
         .                     );
         .             }
         2 (0.0%)  }

--------------------------------------------------------------------------------
-- Annotated source file: /home/austin/dev/LSM-Tree/src/lsm.hpp
--------------------------------------------------------------------------------
Ir_______________ 

-- line 8 ----------------------------------------
         .         
         .         #include "Types.hpp"
         .         #include "Utils.hpp"
         .         #include "bloomfilter.hpp"
         .         #include <unordered_map>
         .         #include <map>
         .         #include <chrono>
         .         template<typename KeyType, typename ValType>
        24 (0.0%)  struct Level {
         .             KeyType* keys = nullptr;
         .             ValType* vals = nullptr;
         .             bool* tombstone = nullptr;
         .             size_t numPairs = 0;
         .             KeyType* fence = nullptr;
         .             size_t fenceLength = 0;
         .             BloomFilter* bloomFilter = nullptr;
         .             EncodingType encodingType = ENCODING_TYPE;
-- line 24 ----------------------------------------
-- line 39 ----------------------------------------
         .                 // The buffer size is the number of entries in the buffer.
         .                 // TODO: Fix bug when page size != buffer size.
         .                 size_t bufferSize = BUFFER_PAGES * this->pageSize;
         .                 size_t numLevels = 0;
         .                 size_t sizeRatio = SIZE_RATIO;
         .                 std::vector<Level<KeyType, ValType>*> levels = {};
         .             
         .             public:
         5 (0.0%)          LSM() {
         1 (0.0%)              assert(this->pageSize > 0);
         .                     assert(this->getBufferSize() > 0);
         .                     assert(this->getSizeRatio() > 0);
         .                 }
         6 (0.0%)          size_t getBufferSize() { return this->bufferSize; }
         .                 size_t getNumLevels() { return this->numLevels; }
         .                 size_t getSizeRatio() { return this->sizeRatio; }
51,128,148 (0.3%)          Level<KeyType, ValType>* getLevel(size_t l) { return this->levels[l]; }
         5 (0.0%)          KeyType* getLevelKeys(size_t l) { return this->getLevel(l)->keys; }
         .                 ValType* getLevelVals(size_t l) { return this->getLevel(l)->vals; }
         .                 std::map<int64_t, VAL_TYPE>& getLevelDict(size_t l) { return this->getLevel(l)->dict; }
         .                 bool* getLevelTombstone(size_t l) { return this->getLevel(l)->tombstone; }
       134 (0.0%)          size_t getPairsInLevel(size_t l) { return this->getLevel(l)->numPairs; }
        48 (0.0%)          size_t getLevelCapacity(size_t l) { return this->getBufferSize() * std::pow(this->getSizeRatio(), l); }
         .                 bool levelIsEmpty(size_t l) { return this->getPairsInLevel(l) == 0; }
         .                 KeyType getFenceKey(size_t l, size_t index) {
         .                     assert(this->getLevel(l)->fence != nullptr);
         .                     return this->getLevel(l)->fence[index];
         .                 }
         .                 size_t getFenceLength(size_t l) { return this->getLevel(l)->fenceLength; }
         .                 BloomFilter* getBloomFilter(size_t l) { return this->getLevel(l)->bloomFilter; }
         .         
-- line 69 ----------------------------------------
-- line 82 ----------------------------------------
         .                         vals[this->getVal(l, i)] = true;
         .                     }
         .                     return vals.size();
         .                 }
         .         
         .                 // `initializeLevel()`
         .                 // This function is used when we intend to create a new empty level at the bottom of the LSM tree.
         .                 void initializeLevel(size_t l, KeyType* keysPointer, ValType* valsPointer, bool* tombstonePointer, size_t numPairs) {
        12 (0.0%)              assert(l == this->levels.size());
        18 (0.0%)              Level<KeyType, ValType>* newLevel = new Level<KeyType, ValType>;
         6 (0.0%)              newLevel->keys = keysPointer;
         6 (0.0%)              newLevel->vals = valsPointer;
         6 (0.0%)              newLevel->tombstone = tombstonePointer;
         6 (0.0%)              newLevel->numPairs = numPairs;
         .                     this->levels.push_back(newLevel);
         6 (0.0%)              this->numLevels++;
         .                     this->constructFence(l);
         .                     this->constructBloomFilter(l);
         .                 }
         .         
         .                 // `appendPair()`
         .                 // Appends a new KV pair at the end of the specified level.
         .                 void appendPair(size_t l, KeyType key, ValType val, bool isDelete) {
         .                     this->getLevelKeys(l)[this->getPairsInLevel(l)] = key;
-- line 105 ----------------------------------------
-- line 125 ----------------------------------------
         .                         this->propagateLevel(l);
         .                     
         .                     return;
         .                 }
         .         
         .                 // `getKey()`
         .                 // Returns the key at the index specified in the level specified.
         .                 KeyType getKey(size_t l, size_t entryIndex) {
35,413,040 (0.2%)              return this->getLevelKeys(l)[entryIndex];
         .                 }
         .         
         .                 // `getVal()`
         .                 // Returns the value at the index specified in the level specified.
         .                 ValType getVal(size_t l, size_t entryIndex) {
         .                     // check encoding type 
         .                     // first get level
         .                     Level<KeyType, ValType>* level = this->getLevel(l);
17,689,238 (0.1%)              if(level->encodingType == DICT){
35,378,476 (0.2%)                  return level->dictReverse[level->vals[entryIndex]];
         .                     }
         .                     return level->vals[entryIndex];
         .                 }
         .         
         .                 // `getTomb()`
         .                 // Returns the tombstone bit at the index specified in the level specified. `1` means to delete.
         .                 bool getTomb(size_t l, size_t entryIndex) {
 8,844,619 (0.1%)              return this->getLevelTombstone(l)[entryIndex];
         .                 }
         .                 
         .                 // `constructFence()`
         .                 // Constructs the fence pointer array at level l within the catalog .
         .                 void constructFence(size_t l) {
        12 (0.0%)              if (l == 0) return;
        15 (0.0%)              delete[] this->getLevel(l)->fence;
     6,148 (0.0%)              this->getLevel(l)->fenceLength = std::ceil(static_cast<double>(this->getLevel(l)->numPairs) / this->pageSize);
        35 (0.0%)              this->getLevel(l)->fence = new KeyType[this->getLevel(l)->fenceLength];
    69,158 (0.0%)              for (size_t i = 0, j = 0; i < this->getLevel(l)->fenceLength; i++, j += this->pageSize) {
    34,559 (0.0%)                  if (j >= this->getLevel(l)->numPairs) {
         .                             std::cout << "constructFence(): Out of bounds access error." << std::endl;
         .                             return;
         .                         }
    17,277 (0.0%)                  this->getLevel(l)->fence[i] = this->getKey(l, j);
         .                     }
         .                 }
         .         
         .                 // `constructBloomFilter()`
         .                 // Constructs a bloom filter boolean vector over the keys for the specified level based on the current state of the level. 
         .                 // Called at the end of `propagateLevel()` and in `populateCatalog()`.
         .                 void constructBloomFilter(size_t l) {
         .                     size_t levelSize = this->getLevelCapacity(l);
        60 (0.0%)              size_t numBits = static_cast<size_t>(-(levelSize * std::log(BLOOM_TARGET_FPR)) / std::pow(std::log(2), 2));
         .                     
         .                     // Calculate the optimal number of hash functions.
        78 (0.0%)              size_t numHashes = static_cast<size_t>((numBits / static_cast<double>(levelSize)) * std::log(2));
         .                     if (numHashes < 1) numHashes = 1;
         .         
        24 (0.0%)              if (this->getLevel(l)->bloomFilter != nullptr) {
         .                         this->getLevel(l)->bloomFilter->clear();
         .                     } else {
        60 (0.0%)                  this->getLevel(l)->bloomFilter = new BloomFilter(numBits, numHashes);
         .                     }
         .         
        12 (0.0%)              if (!this->levelIsEmpty(l)) {
26,533,869 (0.2%)                  for (size_t i = 0; i < this->getPairsInLevel(l); i++) {
26,533,857 (0.2%)                      this->getLevel(l)->bloomFilter->add(this->getKey(l, i));
         .                         }
         .                     }
         .                 }
         .         
         .                 // `sortLevel()`
         .                 // Sorts the level indicated. Also handles fence pointers and the bloom filter.
         .                 void sortLevel(size_t l) {
         .                     if (l >= this->getNumLevels()) {
-- line 197 ----------------------------------------
-- line 257 ----------------------------------------
         .                 // because the rightBound in these range queries is an exclusive bound.
         .                 int searchLevel(size_t level, KeyType key, bool range) {
         .         
         .                     if (!range) stats.searchLevelCalls++;
         .                     if (!range) {
         .                         if (this->levelIsEmpty(level) || !searchBloomFilter(level, key)) return -1;
         .                     } else {
         .                         // Level is empty or bound is outside the range of keys in the level. Return 0 or len(level) - 1.
        45 (0.0%)                  if (this->levelIsEmpty(level) || key < this->getKey(level, 0)) return 0;
        15 (0.0%)                  if (key > this->getKey(level, this->getPairsInLevel(level) - 1)) return this->getPairsInLevel(level);
         .                     }
         .         
         .                     // The buffer, l0, is not sorted by key. All layers beneath l0 are sorted by key.
         .         
         .                     if (level == 0) {
         .                         // Iterate backwards through the buffer to get the most recent entry.
         .                         for (int i = this->getPairsInLevel(level) - 1; i >= 0; i--) {
         .                             if (this->getKey(level, i) == key) {
-- line 274 ----------------------------------------

--------------------------------------------------------------------------------
-- Annotated source file: /home/austin/dev/LSM-Tree/src/utils.cpp
--------------------------------------------------------------------------------
Ir_______________ 

         .         #include "Utils.hpp"
         .         #include "Types.hpp"
         .         
         .         // `parseCommand()`
         .         // Parses a command such as `p 1 3` or `g 7` into tokens.
        12 (0.0%)  std::vector<std::string> parseCommand(std::string userCommand) {
         .             std::vector<std::string> tokens;
         .             std::istringstream stringStream(userCommand);
         .             std::string token;
        24 (0.0%)      while (stringStream >> token) {
         .                 tokens.push_back(token);
         .             }
         .             return tokens;
        12 (0.0%)  }
         .         
        22 (0.0%)  bool isNum(const std::string& str) {
         .             std::istringstream iss(str);
         .             int64_t num;
         .             iss >> num;
         8 (0.0%)      return iss.eof() && !iss.fail(); 
        24 (0.0%)  }
         .         
        12 (0.0%)  std::string mapToString(const std::map<KEY_TYPE, VAL_TYPE>& map) {
         .             std::stringstream ss;
         .             ss << "[";
         2 (0.0%)      if (!map.empty()) {
10,420,421 (0.1%)          for (auto it = map.begin(); it != map.end(); ++it) {
10,420,418 (0.1%)              if (it != map.begin()) {
         .                         ss << ", ";
         .                     }
36,471,466 (0.2%)              ss << it->first << ":" << it->second;
         .                 }
         .             }
         .             ss << "]";
         .             return ss.str();
         .         }

--------------------------------------------------------------------------------
-- Annotated source file: /usr/include/c++/13.2.1/bits/new_allocator.h
--------------------------------------------------------------------------------
Ir_______________ 

-- line 143 ----------------------------------------
         .         #if __cpp_aligned_new
         .         	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
         .         	  {
         .         	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
         .         	    return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp),
         .         							   __al));
         .         	  }
         .         #endif
23,616,376 (0.2%)  	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
         .               }
         .         
         .               // __p is not permitted to be a null pointer.
         .               void
         .               deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
         .               {
         .         #if __cpp_sized_deallocation
         .         # define _GLIBCXX_SIZED_DEALLOC(p, n) (p), (n) * sizeof(_Tp)
-- line 159 ----------------------------------------
-- line 164 ----------------------------------------
         .         #if __cpp_aligned_new
         .         	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
         .         	  {
         .         	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
         .         				     std::align_val_t(alignof(_Tp)));
         .         	    return;
         .         	  }
         .         #endif
       340 (0.0%)  	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
         .               }
         .         
         .         #undef _GLIBCXX_SIZED_DEALLOC
         .         #undef _GLIBCXX_OPERATOR_DELETE
         .         #undef _GLIBCXX_OPERATOR_NEW
         .         
         .         #if __cplusplus <= 201703L
         .               __attribute__((__always_inline__))
-- line 180 ----------------------------------------
-- line 183 ----------------------------------------
         .               { return _M_max_size(); }
         .         
         .         #if __cplusplus >= 201103L
         .               template<typename _Up, typename... _Args>
         .         	__attribute__((__always_inline__))
         .         	void
         .         	construct(_Up* __p, _Args&&... __args)
         .         	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    12,010 (0.0%)  	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
         .         
         .               template<typename _Up>
         .         	__attribute__((__always_inline__))
         .         	void
         .         	destroy(_Up* __p)
         .         	noexcept(std::is_nothrow_destructible<_Up>::value)
         .         	{ __p->~_Up(); }
         .         #else
-- line 199 ----------------------------------------

--------------------------------------------------------------------------------
-- Annotated source file: /usr/include/c++/13.2.1/bits/stl_bvector.h
--------------------------------------------------------------------------------
Ir________________ 

-- line 99 ----------------------------------------
          .             operator bool() const _GLIBCXX_NOEXCEPT
          .             { return !!(*_M_p & _M_mask); }
          .         
          .             _GLIBCXX20_CONSTEXPR
          .             _Bit_reference&
          .             operator=(bool __x) _GLIBCXX_NOEXCEPT
          .             {
          .               if (__x)
 53,067,714 (0.4%)  	*_M_p |= _M_mask;
          .               else
          .         	*_M_p &= ~_M_mask;
          .               return *this;
          .             }
          .         
          .         #if __cplusplus > 202002L
          .             constexpr const _Bit_reference&
          .             operator=(bool __x) const noexcept
-- line 115 ----------------------------------------
-- line 188 ----------------------------------------
          .         #if __has_attribute(__assume__) && !defined(__clang__)
          .               unsigned int __ofst = _M_offset;
          .               __attribute__ ((__assume__ (__ofst < unsigned(_S_word_bit))));
          .         #endif
          .             }
          .         
          .             _GLIBCXX20_CONSTEXPR
          .             _Bit_iterator_base(_Bit_type * __x, unsigned int __y)
         24 (0.0%)      : _M_p(__x), _M_offset(__y) { }
          .         
          .             _GLIBCXX20_CONSTEXPR
          .             void
          .             _M_bump_up()
          .             {
          .               _M_assume_normalized();
          .               if (_M_offset++ == int(_S_word_bit) - 1)
          .         	{
-- line 204 ----------------------------------------
-- line 220 ----------------------------------------
          .             }
          .         
          .             _GLIBCXX20_CONSTEXPR
          .             void
          .             _M_incr(ptrdiff_t __i)
          .             {
          .               _M_assume_normalized();
          .               difference_type __n = __i + _M_offset;
106,135,452 (0.7%)        _M_p += __n / int(_S_word_bit);
         30 (0.0%)        __n = __n % int(_S_word_bit);
         12 (0.0%)        if (__n < 0)
          .         	{
          .         	  __n += int(_S_word_bit);
          .         	  --_M_p;
          .         	}
          6 (0.0%)        _M_offset = static_cast<unsigned int>(__n);
          .             }
          .         
          .             _GLIBCXX_NODISCARD
          .             friend _GLIBCXX20_CONSTEXPR bool
          .             operator==(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
          .             {
          .               __x._M_assume_normalized();
          .               __y._M_assume_normalized();
-- line 243 ----------------------------------------
-- line 288 ----------------------------------------
          .             { return !(__x < __y); }
          .         #endif // three-way comparison
          .         
          .             friend _GLIBCXX20_CONSTEXPR ptrdiff_t
          .             operator-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
          .             {
          .               __x._M_assume_normalized();
          .               __y._M_assume_normalized();
106,135,428 (0.7%)        return (int(_S_word_bit) * (__x._M_p - __y._M_p)
106,135,428 (0.7%)  	      + __x._M_offset - __y._M_offset);
          .             }
          .           };
          .         #pragma GCC diagnostic pop
          .         
          .           struct _Bit_iterator : public _Bit_iterator_base
          .           {
          .             typedef _Bit_reference  reference;
          .         #if __cplusplus > 201703L
-- line 305 ----------------------------------------
-- line 321 ----------------------------------------
          .             _M_const_cast() const
          .             { return *this; }
          .         
          .             _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
          .             reference
          .             operator*() const
          .             {
          .               _M_assume_normalized();
185,736,999 (1.3%)        return reference(_M_p, 1UL << _M_offset);
          .             }
          .         
          .             _GLIBCXX20_CONSTEXPR
          .             iterator&
          .             operator++()
          .             {
          .               _M_bump_up();
          .               return *this;
-- line 337 ----------------------------------------
-- line 544 ----------------------------------------
          .         	  void operator=(_Bit_iterator __it) { _M_p = __it._M_p; }
          .         	} _M_start;
          .         #endif
          .         	_Bit_iterator	_M_finish;
          .         	_Bit_pointer	_M_end_of_storage;
          .         
          .         	_GLIBCXX20_CONSTEXPR
          .         	_Bvector_impl_data() _GLIBCXX_NOEXCEPT
          6 (0.0%)  	: _M_start(), _M_finish(), _M_end_of_storage()
          .         	{ }
          .         
          .         #if __cplusplus >= 201103L
          .         	_Bvector_impl_data(const _Bvector_impl_data&) = default;
          .         
          .         	_Bvector_impl_data&
          .         	operator=(const _Bvector_impl_data&) = default;
          .         
-- line 560 ----------------------------------------
-- line 707 ----------------------------------------
          .               void
          .               _M_move_data(_Bvector_base&& __x) noexcept
          .               { _M_impl._M_move_data(std::move(__x._M_impl)); }
          .         #endif
          .         
          .               _GLIBCXX_CONSTEXPR
          .               static size_t
          .               _S_nword(size_t __n)
         24 (0.0%)        { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
          .             };
          .         
          .           /**
          .            *  @brief  A specialization of vector for booleans which offers fixed time
          .            *  access to individual elements in any order.
          .            *
          .            *  @ingroup sequences
          .            *  @headerfile vector
-- line 723 ----------------------------------------
-- line 993 ----------------------------------------
          .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
          .               iterator
          .               begin() _GLIBCXX_NOEXCEPT
          .               { return iterator(this->_M_impl._M_start._M_p, 0); }
          .         
          .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
          .               const_iterator
          .               begin() const _GLIBCXX_NOEXCEPT
 53,067,714 (0.4%)        { return const_iterator(this->_M_impl._M_start._M_p, 0); }
          .         
          .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
          .               iterator
          .               end() _GLIBCXX_NOEXCEPT
          .               { return this->_M_impl._M_finish; }
          .         
          .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
          .               const_iterator
-- line 1009 ----------------------------------------
-- line 1343 ----------------------------------------
          .         	return std::copy(const_iterator(__last._M_p, 0), __last,
          .         			 iterator(__q, 0));
          .               }
          .         
          .               _GLIBCXX20_CONSTEXPR
          .               void
          .               _M_initialize(size_type __n)
          .               {
         12 (0.0%)  	if (__n)
          .         	  {
          .         	    _Bit_pointer __q = this->_M_allocate(__n);
         12 (0.0%)  	    this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
          .         	    iterator __start = iterator(std::__addressof(*__q), 0);
         12 (0.0%)  	    this->_M_impl._M_start = __start;
          6 (0.0%)  	    this->_M_impl._M_finish = __start + difference_type(__n);
          .         	  }
          .               }
          .         
          .               _GLIBCXX20_CONSTEXPR
          .               void
          .               _M_initialize_value(bool __x) _GLIBCXX_NOEXCEPT
          .               {
          .         	if (_Bit_type* __p = this->_M_impl._M_start._M_p)
-- line 1365 ----------------------------------------
-- line 1589 ----------------------------------------
          .         #if __cpp_lib_is_constant_evaluated
          .             if (std::is_constant_evaluated())
          .             {
          .               for (size_t __i = 0; __i < __n; ++__i)
          .         	__p[__i] = __x ? ~0ul : 0ul;
          .               return;
          .             }
          .         #endif
         18 (0.0%)      __builtin_memset(__p, __x ? ~0 : 0, __n * sizeof(_Bit_type));
          .           }
          .         
          .         
          .           _GLIBCXX20_CONSTEXPR
          .           inline void
          .           __fill_a1(_GLIBCXX_STD_C::_Bit_iterator __first,
          .         	    _GLIBCXX_STD_C::_Bit_iterator __last, const bool& __x)
          .           {
-- line 1605 ----------------------------------------

--------------------------------------------------------------------------------
-- Annotated source file: /usr/include/c++/13.2.1/bits/stl_map.h
--------------------------------------------------------------------------------
Ir_______________ 

-- line 523 ----------------------------------------
         .               mapped_type&
         .               operator[](key_type&& __k)
         .               {
         .         	// concept requirements
         .         	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)
         .         
         .         	iterator __i = lower_bound(__k);
         .         	// __i->first is greater than or equivalent to __k.
25,236,878 (0.2%)  	if (__i == end() || key_comp()(__k, (*__i).first))
47,213,682 (0.3%)  	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
         .         					std::forward_as_tuple(std::move(__k)),
         .         					std::tuple<>());
         .         	return (*__i).second;
         .               }
         .         #endif
         .         
         .               // _GLIBCXX_RESOLVE_LIB_DEFECTS
         .               // DR 464. Suggestion for new member functions in standard containers.
-- line 540 ----------------------------------------

--------------------------------------------------------------------------------
-- Annotated source file: /usr/include/c++/13.2.1/bits/stl_tree.h
--------------------------------------------------------------------------------
Ir__________________ 

-- line 167 ----------------------------------------
            .           // Helper type to manage default initialization of node count and header.
            .           struct _Rb_tree_header
            .           {
            .             _Rb_tree_node_base	_M_header;
            .             size_t		_M_node_count; // Keeps track of size of tree.
            .         
            .             _Rb_tree_header() _GLIBCXX_NOEXCEPT
            .             {
            7 (0.0%)        _M_header._M_color = _S_red;
            .               _M_reset();
            .             }
            .         
            .         #if __cplusplus >= 201103L
            .             _Rb_tree_header(_Rb_tree_header&& __x) noexcept
            .             {
            .               if (__x._M_header._M_parent != nullptr)
            .         	_M_move_data(__x);
-- line 183 ----------------------------------------
-- line 200 ----------------------------------------
            .               _M_node_count = __from._M_node_count;
            .         
            .               __from._M_reset();
            .             }
            .         
            .             void
            .             _M_reset()
            .             {
            7 (0.0%)        _M_header._M_parent = 0;
           14 (0.0%)        _M_header._M_left = &_M_header;
            7 (0.0%)        _M_header._M_right = &_M_header;
            7 (0.0%)        _M_node_count = 0;
            .             }
            .           };
            .         
            .           template<typename _Val>
            .             struct _Rb_tree_node : public _Rb_tree_node_base
            .             {
            .               typedef _Rb_tree_node<_Val>* _Link_type;
            .         
-- line 219 ----------------------------------------
-- line 294 ----------------------------------------
            .         	_Self __tmp = *this;
            .         	_M_node = _Rb_tree_increment(_M_node);
            .         	return __tmp;
            .               }
            .         
            .               _Self&
            .               operator--() _GLIBCXX_NOEXCEPT
            .               {
    8,367,465 (0.1%)  	_M_node = _Rb_tree_decrement(_M_node);
            .         	return *this;
            .               }
            .         
            .               _Self
            .               operator--(int) _GLIBCXX_NOEXCEPT
            .               {
            .         	_Self __tmp = *this;
            .         	_M_node = _Rb_tree_decrement(_M_node);
-- line 310 ----------------------------------------
-- line 360 ----------------------------------------
            .         
            .               pointer
            .               operator->() const _GLIBCXX_NOEXCEPT
            .               { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
            .         
            .               _Self&
            .               operator++() _GLIBCXX_NOEXCEPT
            .               {
   15,630,627 (0.1%)  	_M_node = _Rb_tree_increment(_M_node);
            .         	return *this;
            .               }
            .         
            .               _Self
            .               operator++(int) _GLIBCXX_NOEXCEPT
            .               {
            .         	_Self __tmp = *this;
            .         	_M_node = _Rb_tree_increment(_M_node);
-- line 376 ----------------------------------------
-- line 729 ----------------------------------------
            .               { return this->_M_impl._M_header._M_right; }
            .         
            .               _Const_Base_ptr
            .               _M_rightmost() const _GLIBCXX_NOEXCEPT
            .               { return this->_M_impl._M_header._M_right; }
            .         
            .               _Link_type
            .               _M_mbegin() const _GLIBCXX_NOEXCEPT
    8,850,626 (0.1%)        { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
            .         
            .               _Link_type
            .               _M_begin() _GLIBCXX_NOEXCEPT
            .               { return _M_mbegin(); }
            .         
            .               _Const_Link_type
            .               _M_begin() const _GLIBCXX_NOEXCEPT
            .               {
            .         	return static_cast<_Const_Link_type>
            .         	  (this->_M_impl._M_header._M_parent);
            .               }
            .         
            .               _Base_ptr
            .               _M_end() _GLIBCXX_NOEXCEPT
    7,874,947 (0.1%)        { return &this->_M_impl._M_header; }
            .         
            .               _Const_Base_ptr
            .               _M_end() const _GLIBCXX_NOEXCEPT
            .               { return &this->_M_impl._M_header; }
            .         
            .               static const _Key&
            .               _S_key(_Const_Link_type __x)
            .               {
-- line 760 ----------------------------------------
-- line 774 ----------------------------------------
            .         # endif // C++17
            .         #endif // C++11
            .         
            .         	return _KeyOfValue()(*__x->_M_valptr());
            .               }
            .         
            .               static _Link_type
            .               _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
  287,067,756 (2.0%)        { return static_cast<_Link_type>(__x->_M_left); }
            .         
            .               static _Const_Link_type
            .               _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
            .               { return static_cast<_Const_Link_type>(__x->_M_left); }
            .         
            .               static _Link_type
            .               _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
  287,067,756 (2.0%)        { return static_cast<_Link_type>(__x->_M_right); }
            .         
            .               static _Const_Link_type
            .               _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
            .               { return static_cast<_Const_Link_type>(__x->_M_right); }
            .         
            .               static const _Key&
            .               _S_key(_Const_Base_ptr __x)
            .               { return _S_key(static_cast<_Const_Link_type>(__x)); }
-- line 798 ----------------------------------------
-- line 994 ----------------------------------------
            .               { return _M_impl._M_key_compare; }
            .         
            .               iterator
            .               begin() _GLIBCXX_NOEXCEPT
            .               { return iterator(this->_M_impl._M_header._M_left); }
            .         
            .               const_iterator
            .               begin() const _GLIBCXX_NOEXCEPT
            1 (0.0%)        { return const_iterator(this->_M_impl._M_header._M_left); }
            .         
            .               iterator
            .               end() _GLIBCXX_NOEXCEPT
            .               { return iterator(&this->_M_impl._M_header); }
            .         
            .               const_iterator
            .               end() const _GLIBCXX_NOEXCEPT
            1 (0.0%)        { return const_iterator(&this->_M_impl._M_header); }
            .         
            .               reverse_iterator
            .               rbegin() _GLIBCXX_NOEXCEPT
            .               { return reverse_iterator(end()); }
            .         
            .               const_reverse_iterator
            .               rbegin() const _GLIBCXX_NOEXCEPT
            .               { return const_reverse_iterator(end()); }
-- line 1018 ----------------------------------------
-- line 1632 ----------------------------------------
            .               struct _Auto_node
            .               {
            .         	template<typename... _Args>
            .         	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
            .         	  : _M_t(__t),
            .         	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
            .         	  { }
            .         
    7,868,947 (0.1%)  	~_Auto_node()
            .         	{
            .         	  if (_M_node)
            .         	    _M_t._M_drop_node(_M_node);
            .         	}
            .         
            .         	_Auto_node(_Auto_node&& __n)
            .         	: _M_t(__n._M_t), _M_node(__n._M_node)
            .         	{ __n._M_node = nullptr; }
-- line 1648 ----------------------------------------
-- line 1943 ----------------------------------------
            .           template<typename _Key, typename _Val, typename _KeyOfValue,
            .         	   typename _Compare, typename _Alloc>
            .             typename _Rb_tree<_Key, _Val, _KeyOfValue,
            .         		      _Compare, _Alloc>::iterator
            .             _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
            .             _M_lower_bound(_Link_type __x, _Base_ptr __y,
            .         		   const _Key& __k)
            .             {
1,089,024,249 (7.4%)        while (__x != 0)
  574,135,512 (3.9%)  	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   78,366,989 (0.5%)  	  __y = __x, __x = _S_left(__x);
            .         	else
            .         	  __x = _S_right(__x);
            .               return iterator(__y);
            .             }
            .         
            .           template<typename _Key, typename _Val, typename _KeyOfValue,
            .         	   typename _Compare, typename _Alloc>
            .             typename _Rb_tree<_Key, _Val, _KeyOfValue,
-- line 1961 ----------------------------------------
-- line 2105 ----------------------------------------
            .         			   _Compare, _Alloc>::_Base_ptr,
            .         	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
            .         			   _Compare, _Alloc>::_Base_ptr>
            .             _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
            .             _M_get_insert_unique_pos(const key_type& __k)
            .             {
            .               typedef pair<_Base_ptr, _Base_ptr> _Res;
            .               _Link_type __x = _M_begin();
            7 (0.0%)        _Base_ptr __y = _M_end();
            .               bool __comp = true;
           20 (0.0%)        while (__x != 0)
            .         	{
            .         	  __y = __x;
            .         	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
            .         	  __x = __comp ? _S_left(__x) : _S_right(__x);
            .         	}
            .               iterator __j = iterator(__y);
            .               if (__comp)
            .         	{
    1,047,596 (0.0%)  	  if (__j == begin())
            .         	    return _Res(__x, __y);
            .         	  else
            .         	    --__j;
            .         	}
        2,994 (0.0%)        if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
            .         	return _Res(__x, __y);
            .               return _Res(__j._M_node, 0);
            .             }
            .         
            .           template<typename _Key, typename _Val, typename _KeyOfValue,
            .         	   typename _Compare, typename _Alloc>
            .             pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
            .         			   _Compare, _Alloc>::_Base_ptr,
-- line 2137 ----------------------------------------
-- line 2210 ----------------------------------------
            .             _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
            .             _M_get_insert_hint_unique_pos(const_iterator __position,
            .         				  const key_type& __k)
            .             {
            .               iterator __pos = __position._M_const_cast();
            .               typedef pair<_Base_ptr, _Base_ptr> _Res;
            .         
            .               // end()
   15,737,894 (0.1%)        if (__pos._M_node == _M_end())
            .         	{
            .         	  if (size() > 0
   25,413,939 (0.2%)  	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
            .         	    return _Res(0, _M_rightmost());
            .         	  else
            .         	    return _M_get_insert_unique_pos(__k);
            .         	}
    5,578,310 (0.0%)        else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
            .         	{
            .         	  // First, try before...
            .         	  iterator __before = __pos;
    8,367,465 (0.1%)  	  if (__pos._M_node == _M_leftmost()) // begin()
            .         	    return _Res(_M_leftmost(), _M_leftmost());
    8,367,465 (0.1%)  	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
            .         	    {
    7,319,897 (0.1%)  	      if (_S_right(__before._M_node) == 0)
            .         		return _Res(0, __before._M_node);
            .         	      else
            .         		return _Res(__pos._M_node, __pos._M_node);
            .         	    }
            .         	  else
            .         	    return _M_get_insert_unique_pos(__k);
            .         	}
            .               else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
-- line 2242 ----------------------------------------
-- line 2373 ----------------------------------------
            .         #if __cplusplus >= 201103L
            .           template<typename _Key, typename _Val, typename _KeyOfValue,
            .         	   typename _Compare, typename _Alloc>
            .             auto
            .             _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
            .             _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
            .             -> iterator
            .             {
   27,297,488 (0.2%)        bool __insert_left = (__x != 0 || __p == _M_end()
   27,303,476 (0.2%)  			    || _M_impl._M_key_compare(_S_key(__z),
            .         						      _S_key(__p)));
            .         
   31,487,788 (0.2%)        _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
            .         				    this->_M_impl._M_header);
    7,871,947 (0.1%)        ++_M_impl._M_node_count;
            .               return iterator(__z);
            .             }
            .         
            .           template<typename _Key, typename _Val, typename _KeyOfValue,
            .         	   typename _Compare, typename _Alloc>
            .             auto
            .             _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
            .             _M_insert_lower_node(_Base_ptr __p, _Link_type __z)
-- line 2395 ----------------------------------------
-- line 2450 ----------------------------------------
            .         	auto __res = _M_get_insert_equal_pos(__z._M_key());
            .         	return __z._M_insert(__res);
            .               }
            .         
            .           template<typename _Key, typename _Val, typename _KeyOfValue,
            .         	   typename _Compare, typename _Alloc>
            .             template<typename... _Args>
            .               auto
   78,689,470 (0.5%)        _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
            .               _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
            .               -> iterator
            .               {
            .         	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   13,642,768 (0.1%)  	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
            .         	if (__res.second)
            .         	  return __z._M_insert(__res);
            .         	return iterator(__res.first);
   70,820,523 (0.5%)        }
            .         
            .           template<typename _Key, typename _Val, typename _KeyOfValue,
            .         	   typename _Compare, typename _Alloc>
            .             template<typename... _Args>
            .               auto
            .               _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
            .               _M_emplace_hint_equal(const_iterator __pos, _Args&&... __args)
            .               -> iterator
-- line 2475 ----------------------------------------

--------------------------------------------------------------------------------
-- Annotated source file: /usr/include/c++/13.2.1/ostream
--------------------------------------------------------------------------------
Ir_______________ 

-- line 87 ----------------------------------------
         .               { this->init(__sb); }
         .         
         .               /**
         .                *  @brief  Base destructor.
         .                *
         .                *  This does very little apart from providing a virtual base dtor.
         .               */
         .               virtual
        25 (0.0%)        ~basic_ostream() { }
         .         
         .               /// Safe prefix/suffix operations.
         .               class sentry;
         .               friend class sentry;
         .         
         .               ///@{
         .               /**
         .                *  @brief  Interface for manipulators.
-- line 103 ----------------------------------------
-- line 107 ----------------------------------------
         .                *  information, see the iomanip header.
         .               */
         .               __ostream_type&
         .               operator<<(__ostream_type& (*__pf)(__ostream_type&))
         .               {
         .         	// _GLIBCXX_RESOLVE_LIB_DEFECTS
         .         	// DR 60. What is a formatted input function?
         .         	// The inserters for manipulators are *not* formatted output functions.
         8 (0.0%)  	return __pf(*this);
         .               }
         .         
         .               __ostream_type&
         .               operator<<(__ios_type& (*__pf)(__ios_type&))
         .               {
         .         	// _GLIBCXX_RESOLVE_LIB_DEFECTS
         .         	// DR 60. What is a formatted input function?
         .         	// The inserters for manipulators are *not* formatted output functions.
-- line 123 ----------------------------------------
-- line 126 ----------------------------------------
         .               }
         .         
         .               __ostream_type&
         .               operator<<(ios_base& (*__pf) (ios_base&))
         .               {
         .         	// _GLIBCXX_RESOLVE_LIB_DEFECTS
         .         	// DR 60. What is a formatted input function?
         .         	// The inserters for manipulators are *not* formatted output functions.
         3 (0.0%)  	__pf(*this);
         .         	return *this;
         .               }
         .               ///@}
         .         
         .               ///@{
         .               /**
         .                *  @name Inserters
         .                *
-- line 142 ----------------------------------------
-- line 161 ----------------------------------------
         .                *  @param  __n A variable of builtin integral type.
         .                *  @return  @c *this if successful
         .                *
         .                *  These functions use the stream's current locale (specifically, the
         .                *  @c num_get facet) to perform numeric formatting.
         .               */
         .               __ostream_type&
         .               operator<<(long __n)
        35 (0.0%)        { return _M_insert(__n); }
         .         
         .               __ostream_type&
         .               operator<<(unsigned long __n)
        12 (0.0%)        { return _M_insert(__n); }
         .         
         .               __ostream_type&
         .               operator<<(bool __n)
         .               { return _M_insert(__n); }
         .         
         .               __ostream_type&
         .               operator<<(short __n);
         .         
-- line 181 ----------------------------------------
-- line 222 ----------------------------------------
         .               operator<<(double __f)
         .               { return _M_insert(__f); }
         .         
         .               __ostream_type&
         .               operator<<(float __f)
         .               {
         .         	// _GLIBCXX_RESOLVE_LIB_DEFECTS
         .         	// 117. basic_ostream uses nonexistent num_put member functions.
         4 (0.0%)  	return _M_insert(static_cast<double>(__f));
         .               }
         .         
         .               __ostream_type&
         .               operator<<(long double __f)
         .               { return _M_insert(__f); }
         .               ///@}
         .         
         .         #if defined(__STDCPP_FLOAT16_T__) && defined(_GLIBCXX_DOUBLE_IS_IEEE_BINARY64)
-- line 238 ----------------------------------------
-- line 424 ----------------------------------------
         .                *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
         .                *  If that function fails, sets failbit.
         .               */
         .                __ostream_type&
         .               seekp(off_type, ios_base::seekdir);
         .         
         .             protected:
         .               basic_ostream()
        49 (0.0%)        { this->init(0); }
         .         
         .         #if __cplusplus >= 201103L
         .               // Non-standard constructor that does not call init()
         .               basic_ostream(basic_iostream<_CharT, _Traits>&) { }
         .         
         .               basic_ostream(const basic_ostream&) = delete;
         .         
         .               basic_ostream(basic_ostream&& __rhs)
-- line 440 ----------------------------------------
-- line 659 ----------------------------------------
         .           // Partial specializations
         .           template<typename _Traits>
         .             inline basic_ostream<char, _Traits>&
         .             operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
         .             {
         .               if (!__s)
         .         	__out.setstate(ios_base::badbit);
         .               else
46,892,003 (0.3%)  	__ostream_insert(__out, __s,
         .         			 static_cast<streamsize>(_Traits::length(__s)));
         .               return __out;
         .             }
         .         
         .           // Signed and unsigned
         .           template<typename _Traits>
         .             inline basic_ostream<char, _Traits>&
         .             operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
-- line 675 ----------------------------------------
-- line 727 ----------------------------------------
         .            *
         .            *  This manipulator is often mistakenly used when a simple newline is
         .            *  desired, leading to poor buffering performance.  See
         .            *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/streambufs.html#io.streambuf.buffering
         .            *  for more on this subject.
         .           */
         .           template<typename _CharT, typename _Traits>
         .             inline basic_ostream<_CharT, _Traits>&
        15 (0.0%)      endl(basic_ostream<_CharT, _Traits>& __os)
       129 (0.0%)      { return flush(__os.put(__os.widen('\n'))); }
         .         
         .           /**
         .            *  @brief  Write a null character into the output sequence.
         .            *
         .            *  <em>Null character</em> is @c CharT() by definition.  For CharT
         .            *  of @c char, this correctly writes the ASCII @c NUL character
         .            *  string terminator.
         .           */
-- line 744 ----------------------------------------
-- line 750 ----------------------------------------
         .           /**
         .            *  @brief  Flushes the output stream.
         .            *
         .            *  This manipulator simply calls the stream's @c flush() member function.
         .           */
         .           template<typename _CharT, typename _Traits>
         .             inline basic_ostream<_CharT, _Traits>&
         .             flush(basic_ostream<_CharT, _Traits>& __os)
        17 (0.0%)      { return __os.flush(); }
         .         
         .         #if __cplusplus >= 201103L
         .           // C++11 27.7.3.9 Rvalue stream insertion [ostream.rvalue]
         .           // _GLIBCXX_RESOLVE_LIB_DEFECTS
         .           // 1203. More useful rvalue stream insertion
         .         
         .         #if __cpp_lib_concepts
         .           // Use concepts if possible because they're cheaper to evaluate.
-- line 766 ----------------------------------------

--------------------------------------------------------------------------------
-- Annotated source file: /usr/include/c++/13.2.1/tuple
--------------------------------------------------------------------------------
Ir_______________ 

-- line 193 ----------------------------------------
         .               constexpr _Head_base(const _Head& __h)
         .               : _M_head_impl(__h) { }
         .         
         .               constexpr _Head_base(const _Head_base&) = default;
         .               constexpr _Head_base(_Head_base&&) = default;
         .         
         .               template<typename _UHead>
         .                 constexpr _Head_base(_UHead&& __h)
15,737,851 (0.1%)  	: _M_head_impl(std::forward<_UHead>(__h)) { }
         .         
         .               _GLIBCXX20_CONSTEXPR
         .               _Head_base(allocator_arg_t, __uses_alloc0)
         .               : _M_head_impl() { }
         .         
         .               template<typename _Alloc>
         .         	_GLIBCXX20_CONSTEXPR
         .         	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
-- line 209 ----------------------------------------
-- line 2259 ----------------------------------------
         .         
         .           template<class _T1, class _T2>
         .             template<typename... _Args1, size_t... _Indexes1,
         .         	     typename... _Args2, size_t... _Indexes2>
         .               _GLIBCXX20_CONSTEXPR inline
         .               pair<_T1, _T2>::
         .               pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
         .         	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
31,478,788 (0.2%)        : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
15,743,894 (0.1%)  	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
         .               { }
         .         
         .         #if __cplusplus >= 201703L
         .         
         .           // Unpack a std::tuple into a type trait and use its value.
         .           // For cv std::tuple<_Up> the result is _Trait<_Tp, cv _Up...>::value.
         .           // For cv std::tuple<_Up>& the result is _Trait<_Tp, cv _Up&...>::value.
         .           // Otherwise the result is false (because we don't know if std::get throws).
-- line 2276 ----------------------------------------

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/basic_ios.h
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/basic_ios.h

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/char_traits.h
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/char_traits.h

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ios_base.h
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ios_base.h

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/locale_facets.h
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/locale_facets.h

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/locale_facets.tcc
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/locale_facets.tcc

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ostream.tcc
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ostream.tcc

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ostream_insert.h
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/ostream_insert.h

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/stl_algobase.h
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/stl_algobase.h

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/streambuf.tcc
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/streambuf.tcc

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/streambuf_iterator.h
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/streambuf_iterator.h

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/ostream
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/ostream

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/streambuf
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/streambuf

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/new_op.cc
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/new_op.cc

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++98/locale.cc
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++98/locale.cc

--------------------------------------------------------------------------------
-- Annotated source file: /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++98/tree.cc
--------------------------------------------------------------------------------
Unannotated because one or more of these original files are unreadable:
- /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++98/tree.cc

--------------------------------------------------------------------------------
-- Annotation summary
--------------------------------------------------------------------------------
Ir___________________ 

7,235,467,838 (49.5%)    annotated: files known & above threshold & readable, line numbers known
            0            annotated: files known & above threshold & readable, line numbers unknown
            0          unannotated: files known & above threshold & two or more non-identical
5,393,782,686 (36.9%)  unannotated: files known & above threshold & unreadable 
    1,829,733  (0.0%)  unannotated: files known & below threshold
1,986,845,226 (13.6%)  unannotated: files unknown

